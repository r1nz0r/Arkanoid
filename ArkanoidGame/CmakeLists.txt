# Add source and header files of engine here
FILE(GLOB_RECURSE headers "include/*.h")
FILE(GLOB_RECURSE sources "src/*.cpp")

# Create static library for Engine
add_executable(${ARKANOID_GAME_TARGET_NAME} ${sources} ${headers})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR}  FILES ${sources} ${headers})

# Set include directories for Engine
target_include_directories(${ARKANOID_GAME_TARGET_NAME} PUBLIC 
    ${CMAKE_CURRENT_SOURCE_DIR}/include
)

set(SFML_LIB_NAME SFML)

#Using fetch for download SFML

set(SFML_LIB_VERSION 2.6.1)
find_package(${SFML_LIB_NAME} ${SFML_LIB_VERSION} QUIET)

if (NOT ${SFML_LIB_NAME}_FOUND)
    include(FetchContent)
    FetchContent_Declare(
        ${SFML_LIB_NAME}
        GIT_REPOSITORY https://github.com/SFML/SFML
        GIT_TAG 2.6.1
        GIT_SHALLOW FALSE
    )
endif()
## If you want to link SFML statically
set(SFML_STATIC_LIBRARIES TRUE)

#Load lib
FetchContent_MakeAvailable(${SFML_LIB_NAME})

target_link_libraries(${ARKANOID_GAME_TARGET_NAME} PRIVATE sfml-graphics)
target_compile_features(${ARKANOID_GAME_TARGET_NAME} PRIVATE cxx_std_17)

if(WIN32)
    add_custom_command(
        TARGET ${ARKANOID_GAME_TARGET_NAME}
        COMMENT "Copy OpenAL DLL"
        PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${SFML_SOURCE_DIR}/extlibs/bin/$<IF:$<EQUAL:${CMAKE_SIZEOF_VOID_P},8>,x64,x86>/openal32.dll $<TARGET_FILE_DIR:${ARKANOID_GAME_TARGET_NAME}>
        VERBATIM)
endif()